@import "./animation.scss";
@import "./window.scss";

@mixin light{
    --theme:light;

    --white:white;
    --black:black;
    --gray:gray;
    --primary: rgb(29, 147, 171);
    --second: rgb(231, 248, 255);
    --hover-color: #f3f3f3;
    --bar-color: rgba(0, 0, 0, 0.1);
    --theme-color: var(--gray);

    --shadow: 50px 50px 100px 10px rgb(0, 0, 0, 0.1);
    --card-shadow: 0px 2px 4px 0px rgb(0, 0, 0, 0.05);

    --border-in-light: 1px solid rgb(222, 222, 222);
}

@mixin dark {
    --theme: dark;
  
    /* color */
    --white: rgb(30, 30, 30);
    --black: rgb(187, 187, 187);
    --gray: rgb(21, 21, 21);
    --primary: rgb(29, 147, 171);
    --second: rgb(27 38 42);
    --hover-color: #323232;
  
    --bar-color: rgba(255, 255, 255, 0.1);
  
    --border-in-light: 1px solid rgba(255, 255, 255, 0.192);
  
    --theme-color: var(--gray);
  }

  .light{
    @include light;
  }

  .dark{
    @include dark;
  }

  :root {
    @include light;
  
    --window-width: 90vw;
    --window-height: 90vh;
    --sidebar-width: 300px;
    --window-content-width: calc(100% - var(--sidebar-width));
    --message-max-width: 80%;
    --full-height: 100%;
  }

  @media only screen and (max-width: 600px) {
    :root {
      --window-width: 100vw;
      --window-height: var(--full-height);
      --sidebar-width: 100vw;
      --window-content-width: var(--window-width);
      --message-max-width: 100%;
    }
}

@media (prefers-color-scheme: dark) {
    :root {
      @include dark;
    }
  }

  html {
    height: var(--full-height);
  
    font-family: "Noto Sans", "SF Pro SC", "SF Pro Text", "SF Pro Icons",
      "PingFang SC", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }

  body{
    background-color:var(--gray);
    color:var(--black);
    margin:0;
    padding: 0;
    height: var(--full-height);
    width: 100vm;
    display: flex;
    /*
    display: flex;是 CSS 中的一个属性设置，用于将元素的display属性设置为弹性容器（flex container）。
    弹性子元素的排列：
    子元素可以在弹性容器内沿着主轴（main axis）和交叉轴（cross axis）进行排列。默认情况下，主轴是水平方向，从左到右；交叉轴是垂直方向，从上到下。
    可以通过flex-direction属性来改变主轴的方向，例如设置为column可使主轴变为垂直方向，子元素将从上到下排列。
    弹性空间分配：
    弹性容器可以根据子元素的大小和容器的可用空间，自动分配空间给子元素。
    可以使用justify-content属性来控制子元素在主轴上的对齐方式，比如center可以使子元素在主轴上居中对齐；space-between可以使子元素在主轴上两端对齐，中间间隔均匀。
    使用align-items属性控制子元素在交叉轴上的对齐方式，如center可使子元素在交叉轴上居中对齐。
    */
    justify-content: center;
    align-items: center;
    /*
    justify-content:控制主轴排列
    align-items: 控制交叉轴排列
    */
    user-select: none;//禁止用户选择文本
    touch-action: pan-x pan-y;//touch-action属性用于控制触摸屏上的触摸操作行为。pan-x pan-y表示允许在水平方向（pan-x）和垂直方向（pan-y）进行平移（滑动）操作。
    overflow: hidden;//内容超出边界隐藏

    @media only screen and (max-width: 600px) {
        background-color: var(--second);
      }

      *:focus-visible {
        outline: none;
      }
      /*
      *:focus-visible是一个 CSS 选择器，它表示选择所有在获得 “明显聚焦” 状态时的元素。
      “明显聚焦” 通常是指通过键盘导航或其他明确的用户交互方式使元素获得焦点，
      与通过鼠标点击等不太明显的聚焦方式区分开来。
      outline: none;：这个属性设置用于去除元素在获得 “明显聚焦” 状态时通常显示的轮廓线。
      在浏览器中，当一个元素获得焦点时，默认会显示一个轮廓线来提示用户该元素处于聚焦状态。
      但是在某些设计中，这个默认的轮廓线可能会影响页面的美观或者与整体设计风格不匹配，
      所以可以使用这段代码来去除它。
      */
}

  